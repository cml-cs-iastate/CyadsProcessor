"""
Django settings for CyadsProcessor project.

Generated by 'django-admin startproject' using Django 2.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""
import datetime
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from pathlib import Path
import mimetypes
mimetypes.init()
mimetypes.add_type("text/css", ".css", True)

STATIC_URL = '/static/'

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', "adsfasdf")
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG')

ALLOWED_HOSTS = ["127.0.0.1","localhost", "cyads.misc.iastate.edu", "0.0.0.0"]


# Application definition

INSTALLED_APPS = [
    'django_extensions',
    'downloader.apps.DownloaderConfig',
    'processor.apps.ProcessorConfig',
    'ad_extension_pull.apps.AdExtensionPullConfig',
    'messaging.apps.MessagingConfig',
    'dashboard.apps.DashboardConfig',
    'django.contrib.admin',
    'django.contrib.admindocs',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'CyadsProcessor.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'CyadsProcessor.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DATABASE'),
        'USER': os.getenv('DATABASE_USER'),
        'PASSWORD': os.getenv('DATABASE_PASSWORD'),
        'HOST': os.getenv('DATABASE_HOST'),
        'PORT': os.getenv('DATABASE_PORT', '3306'),
        'OPTIONS': {
            'charset': 'utf8mb4',
        }
    },

    # Ad extension database
    'ad_extension': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('GOOGLE_CYADS_PROCESSOR_DB_NAME', 'cyads_processor'),
        'USER': os.getenv('GOOGLE_CYADS_PROCESSOR_DB_USERNAME', 'root'),
        'PASSWORD': os.getenv('GOOGLE_CYADS_PROCESSOR_DB_PASSWORD'),
        'HOST': os.getenv('GOOGLE_CYADS_PROCESSOR_DB_HOSTNAME', '35.202.112.86'),
        'PORT': os.getenv('GOOGLE_CYADS_PROCESSOR_DB_PORT', '3306')
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

TEMPLATE_DIRS = (os.path.join(BASE_DIR,  'templates'),)

log_initial_name = Path(".").resolve().joinpath("logs").joinpath(f"processor{datetime.datetime.today().date()}.log")
log_initial_name.touch(exist_ok=True)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': log_initial_name.as_posix(),
            'formatter': 'verbose',
            'maxBytes': 2048
        },
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'

        },
    },
    'loggers': {
        'django': {
            'handlers': ['file','console'],
            'level': 'INFO',
            'propagate': True,
        },
        'processor': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'messaging': {
            'handlers': ['file','console'],
            'level': 'INFO',
            'propagate': True,
        },
        'downloader': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        }

    },
}

# celery
BROKER_HOST = os.getenv("BROKER_HOST", "localhost")
BROKER_PASSWORD = os.getenv("BROKER_PASSWORD", "")
BROKER_DB = "0"
CELERY_BROKER_URL = f'redis://:{BROKER_PASSWORD}@{BROKER_HOST}:6379/{BROKER_DB}'
CELERY_RESULT_BACKEND = CELERY_BROKER_URL
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json'


DATABASE_ROUTERS = ['ad_extension_pull.router.AdExtensionRouter']
